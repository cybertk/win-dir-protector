#############################################################################
# Makefile for building: encode
# Generated by qmake (2.01a) (Qt 4.6.2) on: Sun 20. Jun 21:14:53 2010
# Project:  encode.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -Wall $(DEFINES)
INCPATH       = -I"d:/Qt/2010.02.1/qt/include/QtCore" -I"d:/Qt/2010.02.1/qt/include/QtGui" -I"d:/Qt/2010.02.1/qt/include" -I"." -I"release" -I"d:/Qt/2010.02.1/qt/mkspecs/win32-g++"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-s -Wl,-subsystem,windows -static
LIBS        =        -L"d:/Qt/2010.02.1/qt/lib" -lQtGui4 -lQtCore4 
QMAKE         = d:/qt/2010.02.1/qt/bin/qmake.exe
IDC           = d:/Qt/2010.02.1/qt/bin/idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release/

####### Files

SOURCES       = cipher.cpp \
		encode.cpp \
		main.cpp release/moc_cipher.cpp
OBJECTS       = release/cipher.o \
		release/encode.o \
		release/main.o \
		release/moc_cipher.o
DIST          = 
QMAKE_TARGET  = encode
DESTDIR        = release/ #avoid trailing-slash linebreak
TARGET         = encode.exe
DESTDIR_TARGET = release/encode.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) $(OBJECTS)  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec d:/Qt/2010.02.1/qt/mkspecs/win32-g++ -unix CONFIG+=debug_and_release CONFIG+=release -o Makefile.Release encode.pro

dist:
	$(ZIP) encode.zip $(SOURCES) $(DIST) encode.pro d:/Qt/2010.02.1/qt/mkspecs/qconfig.pri d:/Qt/2010.02.1/qt/mkspecs/features/qt_functions.prf d:/Qt/2010.02.1/qt/mkspecs/features/qt_config.prf d:/Qt/2010.02.1/qt/mkspecs/features/exclusive_builds.prf d:/Qt/2010.02.1/qt/mkspecs/features/default_pre.prf d:/Qt/2010.02.1/qt/mkspecs/features/release.prf d:/Qt/2010.02.1/qt/mkspecs/features/debug_and_release.prf d:/Qt/2010.02.1/qt/mkspecs/features/default_post.prf d:/Qt/2010.02.1/qt/mkspecs/features/build_pass.prf d:/Qt/2010.02.1/qt/mkspecs/features/shared.prf d:/Qt/2010.02.1/qt/mkspecs/features/warn_on.prf d:/Qt/2010.02.1/qt/mkspecs/features/qt.prf d:/Qt/2010.02.1/qt/mkspecs/features/unix/thread.prf d:/Qt/2010.02.1/qt/mkspecs/features/moc.prf d:/Qt/2010.02.1/qt/mkspecs/features/resources.prf d:/Qt/2010.02.1/qt/mkspecs/features/uic.prf d:/Qt/2010.02.1/qt/mkspecs/features/yacc.prf d:/Qt/2010.02.1/qt/mkspecs/features/lex.prf d:/Qt/2010.02.1/qt/mkspecs/features/include_source_dir.prf  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release/cipher.o release/encode.o release/main.o release/moc_cipher.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

d:/Qt/2010.02.1/qt/bin/moc.exe:
	(cd $(QTDIR)/src/tools/moc && $(MAKE))

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_cipher.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release/moc_cipher.cpp
release/moc_cipher.cpp: cipher.h \
		d:/Qt/2010.02.1/qt/bin/moc.exe
	d:/Qt/2010.02.1/qt/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 cipher.h -o release/moc_cipher.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 



####### Compile

release/cipher.o: cipher.cpp cipher.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/cipher.o cipher.cpp

release/encode.o: encode.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/encode.o encode.cpp

release/main.o: main.cpp cipher.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/main.o main.cpp

release/moc_cipher.o: release/moc_cipher.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_cipher.o release/moc_cipher.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

